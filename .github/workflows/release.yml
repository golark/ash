name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        include:
          - os: macos-latest
            platform: darwin
            arch: amd64
          - os: ubuntu-latest
            platform: linux
            arch: amd64

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Build application
      run: |
        make build
    
    - name: Create package
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        PACKAGE_NAME="qsh-cli-${VERSION}-${PLATFORM}-${ARCH}"
        
        mkdir -p "dist-package/$PACKAGE_NAME"
        cp dist/ash-client "dist-package/$PACKAGE_NAME/"
        cp dist/ash-server "dist-package/$PACKAGE_NAME/"
        cp ash/ash.zsh "dist-package/$PACKAGE_NAME/"
        cp ./scripts/install.sh "dist-package/$PACKAGE_NAME/"
        cp README.md "dist-package/$PACKAGE_NAME/"
        
        cd dist-package
        tar -czf "${PACKAGE_NAME}.tar.gz" "$PACKAGE_NAME"
        zip -r "${PACKAGE_NAME}.zip" "$PACKAGE_NAME"
      env:
        PLATFORM: ${{ matrix.platform }}
        ARCH: ${{ matrix.arch }}
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: qsh-${{ matrix.platform }}-${{ matrix.arch }}
        path: dist-package/*.tar.gz
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          **/*.tar.gz
          **/*.zip
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Alternative: Use PAT if GITHUB_TOKEN doesn't work
        # GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }} 